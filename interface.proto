syntax = "proto3";
option go_package = "./proto_interface";
package mesh;

service Mesh {
  // 최초 네트워크 진입 시 committee 정보 수신을 위한 subscribe에  필수
  rpc JoinNetwork (NodeAccount) returns (stream CommitteeInfo);
  // 노드가 메시지를 브로드캐스트할 때 JoinNetowrk의 stream으로 전송
  // 즉, JoinNetwork로 subscribe한 노드들에게 데이터를 보낸다는 의미
  rpc Publish (CommitteeInfo) returns (Ack);

  //graceful-shutdown을 위한 option(없어도 자동 감지되어 연결해제됨)
  rpc LeaveNetwork (NodeAccount) returns (Ack);

  rpc RequestCommittee (Metrics) returns (Ack);
}

message NodeAccount {
  string node_id    = 1;
  string public_key = 2;
}

//예시
message Metrics {
  string data1 = 1;
  string data2 = 2;
  string data3 = 3;
}

//예시 
message CommitteeInfo {
  repeated NodeAccount committeeList = 1;
}

message Ack { bool ok = 1; }


/*message Payload {
  string origin = 1;
  bytes  data   = 2;
}*/